@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<!--Modificato per ottenere il ruolo e non il nome utente-->
@{
    var user = UserManager.GetUserAsync(User).Result;
    var roles = user != null ? UserManager.GetRolesAsync(user).Result : new List<string>();
    var role = roles.FirstOrDefault();
}

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <!--Modificato per ottenere il ruolo e non il nome utente-->
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @role!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrati</a>
    </li>
    <li class="nav-item">
        <!--Modificato per reindirizzarmi all'index del mio back-end -->
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Index", "Photo", new { area = "" })">Login</a>
    </li>
}

